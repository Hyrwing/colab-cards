{"version":3,"sources":["components/Card/styles.js","components/Card/index.tsx","components/Arrow/index.tsx","model/cards.ts","model/palettes.ts","Views/MainView/styles.js","Views/MainView/index.tsx","Views/OctopusView/styles.js","components/OctopusCard/styles.js","components/OctopusCard/index.tsx","Views/OctopusView/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Title","styled","h1","number","color","Subtitle","Card","model","palette","title","icon","size","subtitle","Arrow","direction","onClick","Button","variant","faArrowUp","faArrowDown","faArrowRight","faArrowLeft","getIcon","arrow","Cards","faDeaf","faDragon","faThumbsUp","faThumbsDown","faVolumeMute","faLightbulb","faHandPointRight","faHandPointUp","faEllipsisH","faQuestion","OctopusCards","Palettes","background","getPalette","Math","floor","random","length","Container","bootstrap","Row","Col","MainView","useState","current","setCurrent","curPalette","setCurPalette","card","max","fluid","next","value","xs","Image","img","OctopusCard","src","process","OctopusView","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d2e64b1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: bolder;\r\n  font-size: ${({number}) => number ? '10em' : '4em' };\r\n  padding-bottom: 40px;\r\n  color: ${({color}) => color ? color : '#000'}\r\n`;\r\n\r\nexport const Subtitle = styled.h1`\r\n  font-size: 2em;\r\n  padding-top: 60px;\r\n`;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CardModel } from '../../model/cards';\r\n\r\nimport { Title, Subtitle } from './styles';\r\nimport { PaletteModel } from '../../model/palettes';\r\n\r\ntype CardProps = {\r\n  model: CardModel,\r\n  palette?: PaletteModel,\r\n};\r\n\r\nconst Card = ({model, palette}: CardProps) => {\r\n\r\n  return (\r\n    <div>\r\n      <Title color={palette?.title} number={model.number}>{model.title}</Title>\r\n      <FontAwesomeIcon icon={model.icon} size={ model.number ? \"2x\" : \"8x\"} color={palette?.icon}/> \r\n      <Subtitle color={palette?.subtitle}>{model.subtitle}</Subtitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowDown, faArrowUp, faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { PaletteModel } from '../../model/palettes';\r\n\r\ntype ArrowProps = {\r\n  direction: string,\r\n  onClick?: any,\r\n  palette?: PaletteModel,\r\n}\r\n\r\nconst UP = 'up';\r\nconst DOWN = 'down';\r\nconst RIGHT = 'right';\r\nconst LEFT = 'left';\r\n\r\nconst Arrow = ({ direction = 'up', palette, onClick}: ArrowProps) => {\r\n  const getIcon = () => {\r\n    switch (direction) {\r\n      case UP: return faArrowUp;\r\n      case DOWN: return faArrowDown;\r\n      case RIGHT: return faArrowRight;\r\n      case LEFT: return faArrowLeft;\r\n      default: return faArrowUp;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"link\" onClick={onClick}>\r\n      <FontAwesomeIcon icon={getIcon()} size=\"2x\" color={palette?.arrow} />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default Arrow;\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faDeaf, faDragon, faThumbsUp, faThumbsDown, faVolumeMute, faLightbulb, faHandPointUp, faHandPointRight, faQuestion, faEllipsisH } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport interface CardModel {\r\n    title?: string;\r\n    subtitle?: string;\r\n    icon: IconProp;\r\n    number?: boolean;\r\n};\r\n\r\nexport const Cards: CardModel[] = [\r\n    { \r\n        title: `Can't hear you`,\r\n        subtitle: '',\r\n        icon: faDeaf,\r\n    },\r\n    { \r\n        title: 'ELMO!',\r\n        subtitle: `(enough, let's move on)`,\r\n        icon: faDragon,\r\n    },\r\n    { \r\n        title: 'YES!',\r\n        subtitle: '',\r\n        icon: faThumbsUp,\r\n    },\r\n    { \r\n        title: 'NO!',\r\n        subtitle: '',\r\n        icon: faThumbsDown,\r\n    },\r\n    { \r\n        title: `You're on mute`,\r\n        subtitle: '',\r\n        icon: faVolumeMute,\r\n    },\r\n    { \r\n        title: 'Great idea!',\r\n        subtitle: '',\r\n        icon: faLightbulb,\r\n    },\r\n    { \r\n        title: 'NEXT',\r\n        subtitle: '',\r\n        icon: faHandPointRight,\r\n    },\r\n    { \r\n        title: 'I volunteer',\r\n        subtitle: '',\r\n        icon: faHandPointUp,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '1',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '2',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '3',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '4',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '5',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faQuestion,\r\n    }\r\n];\r\n\r\nexport const OctopusCards: CardModel[] = [\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '1',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '2',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '3',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '4',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '5',\r\n        number: true,\r\n    },\r\n    {\r\n        icon: faEllipsisH,\r\n        title: '6',\r\n        number: true,\r\n    },\r\n];","\r\nexport interface PaletteModel {\r\n  background: string,\r\n  title: string,\r\n  icon: string,\r\n  subtitle: string,\r\n  arrow: string,\r\n};\r\n\r\n\r\nexport const Palettes: PaletteModel[] = [\r\n  { \r\n    background: \"#ffd303\",\r\n    title: \"#000\",\r\n    icon: \"#0336FF\",\r\n    subtitle: \"#ff0266\",\r\n    arrow: '#fff',\r\n  },\r\n  { \r\n    background: \"#673ab7\",\r\n    title: \"#fff\",\r\n    icon: \"#ffd149\",\r\n    subtitle: \"#fff\",\r\n    arrow: 'green',\r\n  },\r\n  { \r\n    background: \"#FD6509\",\r\n    title: \"#D53829\",\r\n    icon: \"#842E5C\",\r\n    subtitle: \"#582540\",\r\n    arrow: '#1C1C2B',\r\n  },\r\n  { \r\n    background: \"#7E3F36\",\r\n    title: \"#D53829\",\r\n    icon: \"#A5C537\",\r\n    subtitle: \"#582540\",\r\n    arrow: '#E6D7BB',\r\n  },\r\n  { \r\n    background: \"#463440\",\r\n    title: \"#E8D895\",\r\n    icon: \"#CCB125\",\r\n    subtitle: \"#CA5937\",\r\n    arrow: '#AE3E4D',\r\n  },\r\n  { \r\n    background: \"#A0363A\",\r\n    title: \"#CDA188\",\r\n    icon: \"#4B9ACF\",\r\n    subtitle: \"#57B6BE\",\r\n    arrow: '#F9F9F6',\r\n  },\r\n  { \r\n    background: \"#FCA109\",\r\n    title: \"#F6F288\",\r\n    icon: \"#19D0FA\",\r\n    subtitle: \"#FCA109\",\r\n    arrow: '#17D8DE',\r\n  },\r\n  { \r\n    background: \"#E5322B\",\r\n    title: \"#F3A321\",\r\n    icon: \"#D6DA41\",\r\n    subtitle: \"#2AAA70\",\r\n    arrow: '#17D8DE',\r\n  },\r\n  { \r\n    background: \"#E12822\",\r\n    title: \"#E0D06A\",\r\n    icon: \"#335A52\",\r\n    subtitle: \"#7A1911\",\r\n    arrow: '#17D8DE',\r\n  },\r\n  { \r\n    background: \"#DEB15A\",\r\n    title: \"#F8F4E9\",\r\n    icon: \"#4A1A25\",\r\n    subtitle: \"#7A1911\",\r\n    arrow: '#8D302B',\r\n  },\r\n  { \r\n    background: \"#fff\",\r\n    title: \"#000\",\r\n    icon: \"#2D0A57\",\r\n    subtitle: \"#000\",\r\n    arrow: '#000',\r\n  },\r\n];\r\n\r\nexport const getPalette = () => {\r\n  const next = Palettes[Math.floor(Math.random() * Palettes.length)];\r\n  return next;\r\n}","import styled from 'styled-components';\r\nimport * as bootstrap from 'react-bootstrap';\r\n\r\nexport const Container = styled(bootstrap.Container)`\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n\r\n  background-color: ${({color}) => color ? color : '#ccc' };\r\n`;\r\n\r\nexport const Row = styled(bootstrap.Row)`\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Col = styled(bootstrap.Col)`\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../../components/Card';\r\nimport Arrow from '../../components/Arrow';\r\nimport { Cards } from '../../model/cards';\r\nimport { PaletteModel, getPalette } from '../../model/palettes';\r\n\r\nimport { Container, Row, Col } from './styles';\r\n\r\nfunction MainView() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [curPalette, setCurPalette] = useState<PaletteModel | undefined>(getPalette());\r\n\r\n  let card = Cards[current];\r\n  \r\n  const max = Cards.length - 1;\r\n\r\n  const moveLeft = () => {\r\n    const next = current - 1;\r\n    const value = next < 0 ? max : next;\r\n\r\n    setCurPalette(getPalette());\r\n    setCurrent(value);\r\n  }\r\n\r\n  const moveRight = () => {\r\n    const next = current + 1;\r\n    const value = next > max ? 0 : next;\r\n  \r\n    setCurrent(value);\r\n    setCurPalette(getPalette());\r\n  }\r\n\r\n  return (\r\n    <Container fluid color={curPalette?.background}>\r\n      <Row>\r\n        <Col>\r\n          <Arrow palette={curPalette} direction=\"left\" onClick={moveLeft}/>\r\n        </Col>\r\n        \r\n        <Col xs={6}>\r\n          <Card \r\n            palette={curPalette}\r\n            model={card}\r\n          />\r\n        </Col>\r\n        \r\n        <Col>\r\n          <Arrow palette={curPalette} direction=\"right\" onClick={moveRight}/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainView;\r\n","import styled from 'styled-components';\r\nimport * as bootstrap from 'react-bootstrap';\r\n\r\nexport const Container = styled(bootstrap.Container)`\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n\r\n  background-color: ${({color}) => color ? color : '#ccc' };\r\n`;\r\n\r\nexport const Row = styled(bootstrap.Row)`\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Col = styled(bootstrap.Col)`\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: bolder;\r\n  font-size: ${({number}) => number ? '10em' : '4em' };\r\n  padding-bottom: 40px;\r\n  color: ${({color}) => color ? color : '#000'};\r\n  z-index: 2;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, 15%);\r\n`;\r\n\r\nexport const Subtitle = styled.h1`\r\n  font-size: 2em;\r\n  padding-top: 60px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    max-width: 20rem;\r\n    transform: translate(-50%, -50%);\r\n    top: 50%;\r\n    position: absolute;\r\n    left: 50%;\r\n    box-shadow: 0 8px 50px -6px black;\r\n    -webkit-box-shadow: 0 8px 25px -6px black;\r\n`;\r\n","import React from 'react';\r\nimport { CardModel } from '../../model/cards';\r\n\r\nimport { Title, Subtitle, Image } from './styles';\r\nimport { PaletteModel } from '../../model/palettes';\r\n\r\ntype CardProps = {\r\n  model: CardModel,\r\n  palette?: PaletteModel,\r\n};\r\n\r\nconst OctopusCard = ({model, palette}: CardProps) => {\r\n\r\n  return (\r\n    <div>\r\n      <Title color={palette?.title} number={model.number}>{model.title}</Title>\r\n      <Image src={process.env.PUBLIC_URL + '/oct.png'} />\r\n      <Subtitle color={palette?.subtitle}>{model.subtitle}</Subtitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OctopusCard;\r\n","import React, { useState } from 'react';\r\n\r\nimport Arrow from '../../components/Arrow';\r\nimport { OctopusCards } from '../../model/cards';\r\nimport { PaletteModel, getPalette } from '../../model/palettes';\r\n\r\nimport { Container, Row, Col } from './styles';\r\nimport OctopusCard from '../../components/OctopusCard';\r\n\r\nfunction OctopusView() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [curPalette, setCurPalette] = useState<PaletteModel | undefined>(getPalette());\r\n\r\n  let card = OctopusCards[current];\r\n  \r\n  const max = OctopusCards.length - 1;\r\n\r\n  const moveLeft = () => {\r\n    const next = current - 1;\r\n    const value = next < 0 ? max : next;\r\n\r\n    setCurPalette(getPalette());\r\n    setCurrent(value);\r\n  }\r\n\r\n  const moveRight = () => {\r\n    const next = current + 1;\r\n    const value = next > max ? 0 : next;\r\n  \r\n    setCurrent(value);\r\n    setCurPalette(getPalette());\r\n  }\r\n\r\n  return (\r\n    <Container fluid color={curPalette?.background}>\r\n      <Row>\r\n        <Col>\r\n          <Arrow palette={curPalette} direction=\"left\" onClick={moveLeft}/>\r\n        </Col>\r\n        \r\n        <Col xs={6}>\r\n          <OctopusCard \r\n            palette={curPalette}\r\n            model={card}\r\n          />\r\n        </Col>\r\n        \r\n        <Col>\r\n          <Arrow palette={curPalette} direction=\"right\" onClick={moveRight}/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OctopusView;\r\n","import React from 'react';\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport MainView from './Views/MainView';\r\nimport OctopusView from './Views/OctopusView';\r\n\r\nconst App = () =>\r\n  <HashRouter basename=\"/\">\r\n      <Route exact path=\"/\" component={MainView} />\r\n      <Route path=\"/octopus\" component={OctopusView} />\r\n  </HashRouter>;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}